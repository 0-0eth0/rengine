version: '3.8'

services:
  db:
    restart: always
    image: "postgres:12.3-alpine"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - rengine_network

  redis:
    image: "redis:alpine"
    hostname: redis
    networks:
      - rengine_network
  celery:
    build:
      context: ./web
    restart: always
    entrypoint: /usr/src/app/celery-entrypoint.sh
    command: celery -A reNgine worker -l INFO
    volumes:
      - ./web:/usr/src/app
      - github_repos:/usr/src/github
      - scan_results:/usr/src/scan_results
      - gf_patterns:/root/.gf
      - nuclei_templates:/root/nuclei-templates
    environment:
      - DEBUG=1
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - rengine_network

  celery-beat:
    build: ./web
    command: celery -A reNgine beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DEBUG=1
    depends_on:
      - db
      - redis
      - celery
    volumes:
      - ./web:/usr/src/app
      - github_repos:/usr/src/github
      - scan_results:/usr/src/scan_results
      - gf_patterns:/root/.gf
      - nuclei_templates:/root/nuclei-templates
    networks:
      - rengine_network

  web:
    build:
      context: ./web
    entrypoint: /usr/src/app/entrypoint.sh
    restart: always
    image: docker.pkg.github.com/yogeshojha/rengine/rengine:latest
    environment:
      - DEBUG=1
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    volumes:
      - ./web:/usr/src/app
      - github_repos:/usr/src/github
      - scan_results:/usr/src/scan_results
      - gf_patterns:/root/.gf
      - nuclei_templates:/root/nuclei-templates
    ports:
      - "8000:8000"
    depends_on:
      - db
      - celery
      - celery-beat
    networks:
      - rengine_network

  tor:
    image: peterdavehello/tor-socks-proxy
    restart: always
    networks:
      - rengine_network
    depends_on:
      - web

networks:
  rengine_network:
volumes:
  postgres_data:
  gf_patterns:
  nuclei_templates:
  github_repos:
  scan_results:
