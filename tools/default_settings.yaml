subdomain_discovery:
    # available tools are Sublist3r, amass, assetfinder, subfinder
    # Usage of many tools may improve the results but also may take longer time to scan
    uses_tool: [ subfinder, sublist3r ]
    thread: 10
    # Your wordlist shortname for amass active enumeration, ignore if you are using passive enumeration
    wordlist: default
    # Get the shortname for the config file from configurations module
    amass_config: config_short_name

port_scan:
    # currently reNgine only supports naabu, nmap and other port scanning tools
    # will be made available in future release
    # scan_ports available options are top-100, top-1000, full or custom like
    # [80, 443]
    ports: [ top-100 ]
    # if you want to exclude certain ports, usage: exclude_ports: [80, 443]
    exclude_ports: null
    thread: 10

visual_identification:
    # currently runs aquatone
    # available options for ports are small, medium, large, xlarge
    port: xlarge
    thread: 2

subdomain_takeover:
    # only subjack is supported at this time
    thread: 1

dir_file_search:
    # currently supported dirsearch
    # list the file extensions to look for, extensions: [php, asp, txt]
    # recommended [ all ]
    extensions: [ php,asp,aspx,txt,conf,db,sql,json ]
    recursive: false
    recursive_level: 1
    thread: 100
    # use the shortname for wordlist here
    # default uses dirsearch default dicc.txt wordlist
    wordlist: default

fetch_url:
    # supported tools are gau and hakrawler
    # usage -> uses_tool: [ gau, hakrawler]
    uses_tool: [ gau, hakrawler ]
    # intensity will define how the URLs will be fetched
    # Available Options: normal, aggressive
    # normal: will fetch urls only for the main domain, subdomains urls will not be fetched
    # aggressive: will fetch urls for all the subdomains
    intensity: aggressive

vulnerability_scan:
    # reNgine uses nuclei as a vulnerability scanner.
    # concurrent: Number of concurrent requests (default 10)
    concurrent: 10
    # Template are input file/files to check across hosts
    # Please refer nuclei documentation for templates
    # currently supported options are one or more combination of nuclei-templates
    # Usage: template: cves, default-credentials, dns, files, fuzzing
    # Refer to nuclei-templates repo for available options
    # or you can also use all templates using: template: all
    # Find more about nuclei templates here: https://github.com/projectdiscovery/nuclei-templates
    template: all
    # If you wish to use templates based on severity, you can specify them
    # Usage: severity: critical, low
    # Available options are all, critical, high, low, info
    severity: all
